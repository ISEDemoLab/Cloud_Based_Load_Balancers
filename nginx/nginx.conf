stream {

################################################################################ 
#   Add this config to the `stream` section in the `/etc/nginx/nginx.conf` file
################################################################################ 
#
################################################################################ 
#   Define DNS server if different from the DNS Server in 
#   `/etc/netplan/50-cloud-init.yaml`. Optional settings are 
#   [valid=time] [ipv4=on|off] [ipv6=on|off] [status_zone=zone];
################################################################################ 
    resolver 10.1.100.10;

################################################################################ 
#    Session persistence can be done with hash (shown below), ip hash,
#    sticky learn, sticky route, and sticky cookie 
#    (https://www.nginx.com/products/nginx/load-balancing/?_ga=2.200122726.976909272.1680211360-464606162.1679935068#session-persistence)
# 
#    Load balancing methods to be used if session persistence is not used
#    `least_conn`, `least_time (connect | first_byte | last_byte [inflight])`, or `random`
#    (https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#least_conn)
################################################################################ 
#
################################################################################ 
#    `zone` entries are used for Active Health Checks.  
#    https://docs.nginx.com/nginx/admin-guide/load-balancer/udp-health-check/
#    
#    `max_fails` and `fail_timeout` are Passive Health Check entries.
#    in `upstream psn_auth2` below, if a server times out or sends an error
#    2 times in 30 seconds, the server is marked unavailable and is marked as such
#    for 30 seconds and is retired until a response is received and the server
#    is added back to the rotation
#    https://docs.nginx.com/nginx/admin-guide/load-balancer/udp-health-check/
################################################################################ 
    upstream psn_auth1 {
        # hash $remote_addr consistent;        
        least_time;
        zone udp_zone 64k;
        server ise-aws.securitydemo.net:1812 weight=2;
        server ise-nutanix.securitydemo.net:1812 weight=4;
    }

    upstream psn_auth2 {
        # hash $remote_addr consistent;
        least_time;
        zone udp_zone 64k;
        server ise-azure.securitydemo.net:1812 max_fails=2 fail_timeout=30s;
        server ise-oci.securitydemo.net:1812 max_fails=2 fail_timeout=30s;
    }

    upstream psn_auth3 {
        # hash $remote_addr consistent;
        least_time last_byte;
        zone udp_zone 64k;
        server ise-azure2.securitydemo.net:1812 max_conns=3;
        server ise-oci2.securitydemo.net:1812 max_conns=5;
        server ise-aws2.securitydemo.net:1812 max_conns=7;
    }

    upstream psn_acct1 {
        # hash $remote_addr consistent;
        least_time;
        zone udp_zone 64k;
        server ise-aws.securitydemo.net:1813 weight=2;
        server ise-nutanix.securitydemo.net:1813 weight=4;
    }

    upstream psn_acct2 {
        # hash $remote_addr consistent;
        least_time;
        zone udp_zone 64k;
        server ise-azure.securitydemo.net:1813 max_fails=2 fail_timeout=30s;
        server ise-oci.securitydemo.net:1813 max_fails=2 fail_timeout=30s;
    }

    upstream psn_acct3 {
        # hash $remote_addr consistent;
        least_time last_byte;
        zone udp_zone 64k;
        server ise-azure2.securitydemo.net:1813 max_conns=3;
        server ise-oci2.securitydemo.net:1813 max_conns=5;
        server ise-aws2.securitydemo.net:1813 max_conns=7;
    }

    upstream psn_tacacs {
        # hash $remote_addr consistent;
        least_conn;
        zone tcp_zone 64k;
        server ise-aws.securitydemo.net:49 weight=2;
        server ise-nutanix.securitydemo.net:49 weight=4;
    }

################################################################################ 
#    `proxy_timeout` sets the timeout between two successive read or write 
#    operations on client or proxied server connections. If no data is 
#    transmitted within this time, the connection is closed.
#
#    `proxy_connect_timeout` defines a timeout for establishing a connection 
#    with a proxied server.
#
#    The Active Health Check in NGINX is specified in the server blocks below
#    the `health_check` parameter is configured to your needs.  In the example
#    below, if NGINX receives an error or no response twice in 20 seconds,
#    the server is marked unresponsive and removed from the rotation until it
#    receives 2 responses in 20 seconds before marking it healthy and adding
#    it back to the rotation.
#    https://docs.nginx.com/nginx/admin-guide/load-balancer/udp-health-check/
################################################################################
    server {
        # If udp is not specified, tcp is used (default), 
        # If ip address is not specified, system ip is used
        listen        192.168.100.102:1812 udp;
        proxy_pass    psn_auth1;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        health_check  interval=20 passes=2 fails=2 udp;
    }
	
    server {
        listen        192.168.100.103:1812 udp;
        proxy_pass    psn_auth2;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        health_check  interval=20 passes=2 fails=2 udp;
    }

    server {
        listen        192.168.100.104:1812 udp;
        proxy_pass    psn_auth3;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        health_check  interval=20 passes=2 fails=2 udp;
    }

    server {
        listen        192.168.100.102:1813 udp;
        proxy_pass    psn_acct1;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        health_check  interval=20 passes=2 fails=2 udp;
    }

    server {
        listen        192.168.100.103:1813 udp;
        proxy_pass    psn_acct2;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        health_check  interval=20 passes=2 fails=2 udp;
    }

    server {
        listen        192.168.100.104:1813 udp;
        proxy_pass    psn_acct3;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        health_check  interval=20 passes=2 fails=2 udp;
    }

    server {
        listen        192.168.100.102:49;
        proxy_pass    psn_tacacs;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        health_check  interval=20 passes=2 fails=2;
    }
}